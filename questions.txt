REMOVE this file when you're done with it.

Questions and ----answers from office hours, May 25

-Is it okay for the item pointer returned from List_remove() to point to the removed item? It seems like bad practice to point to an item that is residing in "deleted" memory.
-----No problem since it's just a pointer.

-Am I using the LIST_OOB enums correctly? If not, what should I do with them?
-----No, do not use enums that way. Have an extra variable for your list that of the relevant type that tracks what state your current pointer is in--do not assign enums to pointers.

-Is my List_prev doing what it's supposed in the case where current is pointing to OOB_END?
-----Yes.

-Am I using the flags and whatnot wrong in the Makefile? Any improvements, in general, that I should make to the Makefile?
-----According to Harinder, as long as it works, you're fine. He said the little "dependencies" tell nothing to the compiler, it only tells make that it needs to remake the output file if those dependencies change. Make knows whether the files have changed since the last time make was run. That said, using make clean is a safe way to go before remaking something.

-Which version of C should I use, and why? What features does C99 (or the recommended version) provide that others don't? What version of C is typically used these days? What is the default version of C for GCC to use?
-----Use C11. Not absolutely neccessary but that's probably best way to go. Do does so, specify to gcc "std=c11".

Okay, so based on that, there's some things I need to change for the code:
1. Use an extra variable for the state of current pointer and make all code reflect this.
2. Switch to using std=c11 in the makefile.
3. Modify all code to take advantage of C11 (and C99) features.